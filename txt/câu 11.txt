Class LLNode representing a node of singly linked lists is declared as below:
class LLNode {
public:
    int val;
    LLNode* next;
    LLNode(); // Constructor: val = 0, next = nullptr
    LLNode(int val, LLNode* next); // Constructor with customized data
}
Given a singly linked list head node.
Your task is to implement a function with following prototype:
LLNode* replaceFirstGreater(LLNode* head);
The function returns head node of the singly linked list after replacing every node's value with the first greater node's value to its right. If a node doesn't have a next greater node, set its value to 0.

Note:
- The iostream and stack libraries have been included and namespace std is being used. No other libraries are allowed.
- The constructors and methods of class LLNode have been defined fully so you do not need to redefine them.
- You can write helper functions.
